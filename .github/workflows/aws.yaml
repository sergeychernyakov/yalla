name: Deploy to AWS Elastic Beanstalk

env:
  APP_NAME: yalla
  S3_BUCKET: elasticbeanstalk-me-south-1-330375354568
  AWS_REGION: me-south-1
on:
  push:
    branches: [ master, development ]
jobs:
  deploy_aws:
    runs-on: ubuntu-latest
    name: "Deploy to AWS Elastic Beanstalk"
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6 (needed for eb cli)
        uses: actions/setup-python@v3.1.2
        with:
          python-version: "3.6"
      - name: Set environment for branch
        run: |
          if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
              echo "AWS_EB_APP_NAME=production" >> "$GITHUB_ENV"
              echo "APP_ENV=prod" >> "$GITHUB_ENV"
          else
              echo "AWS_EB_APP_NAME=development" >> "$GITHUB_ENV"
              echo "APP_ENV=dev" >> "$GITHUB_ENV"
          fi
          VERSION_HASH=`openssl rand -hex 10`
          echo "VERSION_HASH=$VERSION_HASH" >> "$GITHUB_ENV"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          mask-aws-account-id: ${{ secrets.AWS_ID }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: yalla-${{ env.APP_ENV }}
          IMAGE_TAG: ${{ env.VERSION_HASH }}
        run: |
          echo "Placing docker image to ECR"
          ECR_IMAGE_NAME=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker build -t ${ECR_IMAGE_NAME} -f docker/deploy/Dockerfile .
          docker push ${ECR_IMAGE_NAME}
          sed "s/\${DOCKER_IMAGE}/`echo ${ECR_IMAGE_NAME//\//\\\/}`/" docker-compose.deploy.yml  > docker-compose.yml
      - name: Deploy to AWS Elastic Beanstalk
        run: |
          echo "Installing Elastic Beanstalk Cli"
          python -m pip install --upgrade pip
          pip install awsebcli --upgrade
          echo "Create new version"
          NEW_VERSION_LABEL=${{ env.VERSION_HASH }}
          zip -r ${NEW_VERSION_LABEL}.zip docker-compose.yml

          echo "Upload to S3"
          aws s3 cp ${NEW_VERSION_LABEL}.zip s3://${S3_BUCKET}/${APP_NAME}/${{ env.APP_ENV }}/${NEW_VERSION_LABEL}.zip --region ${AWS_REGION}

          echo "Creating Elastic Beanstalk version"
          aws elasticbeanstalk create-application-version --application-name ${APP_NAME} --version-label $NEW_VERSION_LABEL --region ${AWS_REGION} --source-bundle S3Bucket=${S3_BUCKET},S3Key=${APP_NAME}/${{ env.APP_ENV }}/${NEW_VERSION_LABEL}.zip --auto-create-application

          echo "Deploy init"
          eb init -p docker --region ${AWS_REGION} ${APP_NAME}
          eb deploy ${APP_NAME}-${{ env.AWS_EB_APP_NAME }} --version ${NEW_VERSION_LABEL}
          echo "Deploy finished"




